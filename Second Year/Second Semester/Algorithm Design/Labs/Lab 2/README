1. Hanoi - n = 3

A: 3 2 1
B:
C:

A: 3 2
B: 1
C:

A: 3
B: 1
C: 2

A: 3
B:
C: 2 1

A:
B: 3
C: 2 1

A: 1
B: 3
C: 2

A: 1
B: 3 2
C:

A:
B: 3 2 1
C:


2. Maximul elementelor unui vector - v = {3, 2, 5, 2, 4}

Pseudocod:

findMaxElement(v, start, sfarsit)
	daca start == sfarsit
		return v[start];
	altfel
		mijl = (start + sfarsit) / 2;
		maxSt = findMaxElement(v, start, mijloc);
		maxDr = findMaxElement(v, mijloc + 1, sfarsit);
		return max(maxSt, maxDr);


									  												findMaxElement(v, 0, 4) - {5}
										   						  		  				  5/2 = 2 mijl

											findMaxElement(v, 0, 2) - {5}                                                       		findMaxElement(v, 3, 4) - {4}
												2/2 = 1 mijl                                   												7/2 = 3 mijl
											}


					findMaxElement(v, 0, 1) - {3}              findMaxElement(v, 2, 2) - {5}               findMaxElement(v, 3, 3) - {2}				findMaxElement(v, 4, 4) - {4}
	 		 				1/2 = 0 mijl


findMaxElement(v, 0, 0) - {3}      findMaxElement(v,1, 1) - {2}


3. Sortare prin interclasare - v = {3, 2, 1, 4, 3, 5, 2}

											{3, 2, 1, 4, 3, 5, 2}

							{3, 2, 1, 4}               					{3, 5, 2}

					{3, 2}				{1, 4}					{3, 5}				{2}

				{3}			{2}		{1}			{4}			{3}			{5}			{2}

					{2, 3}				{1, 4}					{3, 5}				{2}

							{1, 2, 3, 4}								{2, 3, 5}

											{1, 2, 2, 3, 3, 4, 5}



4. Cautare binara - v = {1, 3, 4, 5, 7, 8, 9}; x = 3;


											{1, 3, 4, 5, 7, 8, 9} -> m = 7 / 2 = 3 => v[3] = 5; 5 > 3 deci cautam in stanga. 

									{1, 3, 4, 5}               {7, 8, 9};



											{1, 3, 4, 5} -> m = 3 / 2 = 1 => v[1] = 3; 3 = 3 => ne oprim; rezultatul este 1.

									{1, 3}				{4, 5}



5. Aparitii intr-un vector nesortat - > v = {2, 1, 3, 1, 1, 4, 2, 1, 8, 1}, x = 1;

Pseudocod:

  aparitii(v, x, start, sfarsit, nraparitii);
  	daca start == sfarsit
  		daca v[start] == x 
  			nraparitii++;
    altfel
  		mijl <- (start + sfarsit) / 2
  		aparitii(v, x, start, mijl, nraparitii);
  		aparitii(v, x, mijl + 1, sfarsit, nraparitii);


  				{2, 1, 3, 1, 1, 4, 2, 1, 8, 1}

  		{2 1 3 1 1}                    {4 2 1 8 1}

         {2 1 3}           {1 1}          {4 2 1}          {8 1}

   {2 1}         {3}    {1}     {1}   {4 2}      {1}     {8}    {1}

 {2}   {1}        |      |       |   {4}  {2}     |       |      |       
  |     |                             |    |      
  0     1         0      2       3    0    0      4       0      5